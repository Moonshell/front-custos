{"version":3,"sources":["js/lib/es6-tests.es6"],"names":["test","testRunner","a","i","console","log","Animal","type","say","animal","says","Cat","cat","basket","items","count","onSale","str","dog","many","zoo","animals","types","asyncTask","name","run","setTimeout","document","write","runTests"],"mappings":";;;;;;;;QAqFgBA,I,GAAAA,I;;AArFhB;;;;;;;;;;;;AAEA,IAAIC,aAAa,4BAAkB;AAC/B,gBAAY,mBAAY;AACpB,YAAIC,IAAI,EAAR;;AADoB,mCAEXC,CAFW;AAGhBD,cAAEC,CAAF,IAAO,YAAY;AACfC,wBAAQC,GAAR,CAAYF,CAAZ;AACH,aAFD;AAHgB;;AAEpB,aAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AAAA,kBAApBA,CAAoB;AAI5B;AACDD,UAAE,CAAF,IAPoB,CAOZ;AACX,KAT8B;AAU/B,kBAAc,qBAAY;AAAA,YAChBI,MADgB;AAElB,8BAAc;AAAA;;AACV,qBAAKC,IAAL,GAAY,QAAZ;AACH;;AAJiB;AAAA;AAAA,qCAMbC,GANa,EAMR;AACNJ,4BAAQC,GAAR,CAAY,KAAKE,IAAL,GAAY,QAAZ,GAAuBC,GAAnC;AACH;AARiB;;AAAA;AAAA;;AAWtB,YAAIC,SAAS,IAAIH,MAAJ,EAAb;AACAG,eAAOC,IAAP,CAAY,OAAZ,EAZsB,CAYA;;AAZA,YAchBC,GAdgB;AAAA;;AAelB,2BAAc;AAAA;;AAAA;;AAEV,sBAAKJ,IAAL,GAAY,KAAZ;AAFU;AAGb;;AAlBiB;AAAA,UAcJD,MAdI;;AAqBtB,YAAIM,MAAM,IAAID,GAAJ,EAAV;AACAC,YAAIF,IAAJ,CAAS,OAAT,EAtBsB,CAsBH;AACtB,KAjC8B;AAkC/B,2BAAuB,8BAAY;AAC/B,YAAIG,SAAS;AACTC,mBAAO,CAAC,OAAD,CADE;AAETC,mBAAO,CAFE;AAGTC,oBAAQ;AAHC,SAAb;AAKA,YAAIC,4BACKJ,OAAOE,KADZ,2CAEaF,OAAOG,MAFpB,8BAAJ;AAKAZ,gBAAQC,GAAR,CAAYY,GAAZ;AACH,KA9C8B;AA+C/B,0BAAsB,6BAAY;AAC9B,YAAIC,MAAM,EAAEX,MAAM,QAAR,EAAkBY,MAAM,CAAxB,EAAV;AAD8B,YAEzBZ,IAFyB,GAEXW,GAFW,CAEzBX,IAFyB;AAAA,YAEnBY,IAFmB,GAEXD,GAFW,CAEnBC,IAFmB;;AAG9Bf,gBAAQC,GAAR,CAAYE,IAAZ,EAAkBY,IAAlB,EAH8B,CAGH;;AAE3B,YAAIP,MAAM,EAAEL,MAAM,QAAR,EAAkBY,MAAM,CAAxB,EAAV;AACA,YAAIC,MAAM,EAAER,QAAF,EAAOM,QAAP,EAAV;AACAd,gBAAQC,GAAR,CAAYe,GAAZ,EAP8B,CAOX;AACtB,KAvD8B;AAwD/B,2BAAuB,8BAAY;AAC/B,iBAASX,MAAT,GAA8B;AAAA,gBAAdF,IAAc,uEAAP,KAAO;;AAC1BH,oBAAQC,GAAR,CAAYE,IAAZ;AACH;;AAEDE;;AAEA,iBAASY,OAAT,GAA2B;AAAA,8CAAPC,KAAO;AAAPA,qBAAO;AAAA;;AACvBlB,oBAAQC,GAAR,CAAYiB,KAAZ;AACH;;AAEDD,gBAAQ,KAAR,EAAe,KAAf,EAAsB,MAAtB,EAX+B,CAWA;AAClC,KApE8B;AAqE/B,0BAAsB,6BAAY;AAC9B,YAAIE,YAAY;AACZC,kBAAM,YADM;AAEZC,iBAAK,eAAY;AAAA;;AACbrB,wBAAQC,GAAR,CAAY,KAAKmB,IAAL,GAAY,YAAxB;AACAE,2BAAW,YAAM;AACbtB,4BAAQC,GAAR,CAAY,OAAKmB,IAAL,GAAY,aAAxB;AACH,iBAFD,EAEG,IAFH;AAGH;AAPW,SAAhB;AASAD,kBAAUE,GAAV;AACH;AAhF8B,CAAlB,CAAjB;;AAmFO,SAASzB,IAAT,GAAgB;AACnB2B,aAASC,KAAT,CAAe,4BAAf;AACA3B,eAAW4B,QAAX;AACH;;kBAEc5B,U","file":"es6-tests.js","sourcesContent":["import ES6TestRunner from './es6-test-runner';\r\n\r\nvar testRunner = new ES6TestRunner({\r\n    'test-let': function () {\r\n        var a = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            a[i] = function () {\r\n                console.log(i);\r\n            };\r\n        }\r\n        a[6](); // 6\r\n    },\r\n    'test-class': function () {\r\n        class Animal {\r\n            constructor() {\r\n                this.type = 'animal';\r\n            }\r\n\r\n            says(say) {\r\n                console.log(this.type + ' says ' + say);\r\n            }\r\n        }\r\n\r\n        let animal = new Animal();\r\n        animal.says('hello'); //animal says hello\r\n\r\n        class Cat extends Animal {\r\n            constructor() {\r\n                super();\r\n                this.type = 'cat';\r\n            }\r\n        }\r\n\r\n        let cat = new Cat();\r\n        cat.says('hello'); //cat says hello\r\n    },\r\n    'test-templateString': function () {\r\n        var basket = {\r\n            items: ['apple'],\r\n            count: 1,\r\n            onSale: 'banana'\r\n        };\r\n        var str = `\r\n  There are <b>${basket.count}</b> items\r\n   in your basket, <em>${basket.onSale}</em>\r\n  are on sale!\r\n  `;\r\n        console.log(str);\r\n    },\r\n    'test-destructuring': function () {\r\n        let dog = { type: 'animal', many: 2 };\r\n        let {type, many} = dog;\r\n        console.log(type, many);   //animal 2\r\n\r\n        let cat = { type: \"animal\", many: 1 };\r\n        let zoo = { cat, dog };\r\n        console.log(zoo);  //Object {cat: {\"type\": \"animal\", \"many\": 1} dog: {\"type\": \"animal\", \"many\": 2}}\r\n    },\r\n    'test-defaultAndRest': function () {\r\n        function animal(type = 'cat') {\r\n            console.log(type);\r\n        }\r\n\r\n        animal();\r\n\r\n        function animals(...types) {\r\n            console.log(types);\r\n        }\r\n\r\n        animals('cat', 'dog', 'fish'); //[\"cat\", \"dog\", \"fish\"]\r\n    },\r\n    'test-arrowFunction': function () {\r\n        var asyncTask = {\r\n            name: 'async task',\r\n            run: function () {\r\n                console.log(this.name + ': start...');\r\n                setTimeout(() => {\r\n                    console.log(this.name + ': complete.');\r\n                }, 1000);\r\n            }\r\n        };\r\n        asyncTask.run();\r\n    }\r\n});\r\n\r\nexport function test() {\r\n    document.write('test in es6-tests.es6<br/>');\r\n    testRunner.runTests();\r\n}\r\n\r\nexport default testRunner;"]}